rails g model task title:string description:text company:string url:string
rails g controller tasks
rails db:migrate

routes.rb

                          resources :tasks
                          root 'tasks#index'

install gem simple_form and bootstrap-sass

bundle install

rename application.css to application.css.scss
paste this to:
            @import "bootstrap-sprockets";
            @import "bootstrap";

paste this at application.js
              //= require bootstrap-sprockets

rails generate simple_form:install --bootstrap


update tasks_controller.rb

                            class TasksController < ApplicationController
                              before_action :find_task, only: [:show, :edit, :update, :destroy]


                              def index
                              end

                              def show
                              end

                              def new
                                @task = Task.new
                              end

                              def create
                                @task = Task.new(tasks_params)

                                if @task.save
                                  redirect_to @task
                                else
                                  render 'new'
                                end
                              end

                              def edit
                              end

                              def update
                              end

                              def destroy
                              end


                              private

                              def tasks_params
                                params.require(:task).permit(:title, :description, :company, :url)
                              end


                              def find_task
                                @task = Task.find(params[:id])
                              end

                            end

create _form.html.erb
                            <%= simple_form_for(@task, html: {class: 'form-horizontal'}) do |f| %>
                              <%= f.input :title, label: "task title" %>
                              <%= f.input :description, label: "task description" %>
                              <%= f.input :company, label: "your company" %>
                              <%= f.input :url, label: "link to task" %>
                              <br/>
                              <%= f.button :submit  %>
                            <% end %>

create show.html.erb
                            <h1> <%= @task.title %> </h1>
                            <p>
                              <%= @task.description  %>
                            </p>
                            <p>
                              <%= @task.company  %>
                            </p>
                            <%= link_to "Home" , root_path  %>


modify index.html.erb
                            <% @tasks.each do |task|  %>
                                <h2>
                                  <%= task.title%>
                                </h2>

                                <p>
                                  <%= task.company%>
                                </p>
                                <%end%>
                            <%= link_to "New Task", new_task_path %>

update tasks_controller.rb

                        class TasksController <  ApplicationController
                          before_action :find_task, only: [:show, :edit, :update, :destroy]


                          def index
                            @tasks = Task.all.order("created_at DESC")
                          end

                          def show
                          end

                          def new
                            @task = Task.new
                          end

                          def create
                            @task = Task.new(tasks_params)

                            if @task.save
                              redirect_to @task
                            else
                              render 'new'
                            end
                          end

                          def edit
                          end

                          def update
                            if @task.update(tasks_params)
                              redirect_to @task
                            else
                              render 'edit'
                            end
                          end

                          def destroy
                            @task.destroy
                            redirect_to root_path
                          end


                          private

                          def tasks_params
                            params.require(:task).permit(:title, :description, :company, :url)
                          end


                          def find_task
                            @task = Task.find(params[:id])
                          end

                        end


create edit.html.erb

                          <h1> Edit Task </h1>

                          <%= render 'form' %>
                          <%= link_to "Back", root_path  %>


rails g model category name:string
rails db:migrate
rails g migration add_category_id_to_tasks category_id:integer
rails db:migrate


task.rb
                  class Task < ApplicationRecord
                    belongs_to :category
                  end

category.rb
                  class Category < ApplicationRecord
                    has_many :tasks
                  end

modify _form.html.erb
                <%= simple_form_for(@task, html: {class: 'form-horizontal'}) do |f| %>
                  <%= f.collection_select :category_id, Category.all, :id, :name, { prompt: "Choose a Category"} %>
                  <%= f.input :title, label: "task title" %>
                  <%= f.input :description, label: "task description" %>
                  <%= f.input :company, label: "your company" %>
                  <%= f.input :url, label: "link to task" %>
                  <br/>
                  <%= f.button :submit  %>
                <% end %>

modify application.html.erb


                  <!DOCTYPE html>
                  <html>
                  <head>
                  <title>TaskRabbit</title>
                  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true  %>
                  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true  %>
                  <%= csrf_meta_tags  %>
                  </head>
                  <body>
                  <nav class="navbar navbar-default">
                    <div class="container">
                      <div class="navbar-brand">TaskRabbit</div>
                      <ul class="nav navbar-nav">
                        <li>
                          <%= link_to "All Tasks", root_path %>
                        </li>
                        <% Category.all.each do |category|				 %>
                          <li>
                            <%= link_to category.name, tasks_path(category: category.name) %>
                          </li>
                        <% end %>
                      </ul>
                      <%= link_to "New Task", new_task_path, class: "navbar-text navbar-right navbar-link" %>
                    </div>
                  </nav>
                  <div class="container">
                    <div class="col-md-8 col-md-offset-2">
                      <%= yield %>
                    </div>
                  </div>
                  </body>

                  </html>


modify tasks_controller.rb at index only  (this will separate the tasks according to category)

              def index
                if params[:category].blank?
                  @tasks = Task.all.order("created_at DESC")
                else
                  @category_id = Category.find_by(name: params[:category]).id
                  @tasks = Task.where(category_id: @category_id).order("created_at DESC")
                end
              end

  NOTE: go to rails console to build the category..
  Category
  Category.connection
  Category.create(name: "Handy Man") 
